@page "/"
@page "/login"


@inject NavigationManager navigationManager
@inject SqlDataAccess _db
@inject AppState AppState

<div class="container">
    <h3>Login</h3>

    <EditForm class="form-group" Model="@login" OnValidSubmit="LoginUser">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            Username:
            <input type="text" @bind="@login.UserName" class="form-control col-4" />
        </div>

        <div class="form-group">
            Password:
            <input type="text" @bind="@login.Password" class="form-control col-4" />
        </div>

        <div>
            <button class="btn btn-primary">Log In</button>
            <div class="text-danger">@loginErrorMessage</div>
        </div>
    </EditForm>
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {
    string username = "";
    string password = "";
    string loginErrorMessage = "";
    LoginModel login = new LoginModel();
    [Parameter] public RenderFragment ChildContent { get; set; }

    protected void LoginUser()
    {
        var username = login.UserName.ToLower().Trim();
        var password = login.Password;

        if (_db.ValidateLogin(username, password))
        {
            AppState.SetColour("Red");
            login.IsLoggedIn = true;
            navigationManager.NavigateTo("/observation");
        }
        else
        {
            loginErrorMessage = "Invalid username/password.";
        }
    }

}
